version: '3.8'
services:
  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: policiesconfig
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: always
  # -----------------------------
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: users
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  # -----------------------------
  auth-service:
    build:
      context: ./../auth-service
      dockerfile: ./../auth-service/dockerfile
    ports:
      - "8080:80"
    depends_on:
      - db
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: 1234
      DB_NAME: users
      EX_PORT: 8080
  # -----------------------------
  mail-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/dockerfile
    ports:
      - "8081:80"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      EMAIL_DOMAIN: email
      EMAIL_PASSWORD: password
      EX_PORT: 8081
  # -----------------------------
  policy-service:
    build:
      context: ./../policy-service
      dockerfile: ./../policy-service/dockerfile
    ports:
      - "8083:80"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      EX_PORT: 8083

  # -----------------------------
  device-service:
    build:
      context: ./../device-service
      dockerfile: ./../device-service/dockerfile
    ports:
      - "8084:80"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      EX_PORT: 8084

  # -----------------------------
  enrollment-service:
    build:
      context: ./../enrollment-service
      dockerfile: ./../enrollment-service/dockerfile
    ports:
      - "8085:80"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      EX_PORT: 8085
  # -----------------------------
  configuration-service:
    build:
      context: ./../configuration-service
      dockerfile: ./../configuration-service/dockerfile
    ports:
      - "8087:80"
    restart: always
    environment:
      EX_PORT: 80
      MONGO_URI: mongodb://root:example@mongodb:27017/policiesconfig

volumes:
  postgres_data:
  mongodb_data:
